# Generated by Django 3.2.13 on 2022-05-18 10:10

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Coins',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cmc_id', models.IntegerField(blank=True)),
                ('symbol', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=100)),
                ('logo', models.CharField(max_length=300)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Coins',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='NewsFeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('news_feed_url', models.CharField(max_length=300)),
                ('new_feed_short_name', models.CharField(max_length=50)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'NewsFeeds',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gender', models.CharField(blank=True, max_length=10)),
                ('preffered_lang', models.CharField(blank=True, default='English', max_length=30)),
                ('dob', models.DateField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=50)),
                ('profile_image', models.CharField(blank=True, max_length=330)),
                ('preference', models.CharField(blank=True, max_length=500)),
                ('profile_updated', models.BooleanField(default=False)),
                ('push_notifications', models.BooleanField(default=False)),
                ('email_notifications', models.BooleanField(default=False)),
                ('posts_visible', models.CharField(choices=[('Everybody', 'Everybody'), ('Nobody', 'Nobody'), ('Selected', 'Selected')], default='Everybody', max_length=20)),
                ('profile_photo_visible', models.CharField(choices=[('Everybody', 'Everybody'), ('Nobody', 'Nobody'), ('Selected', 'Selected')], default='Everybody', max_length=20)),
                ('last_seen_online', models.CharField(choices=[('Everybody', 'Everybody'), ('Nobody', 'Nobody'), ('Selected', 'Selected')], default='Everybody', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
